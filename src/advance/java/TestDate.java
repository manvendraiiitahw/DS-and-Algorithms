package advance.java;

import java.sql.Timestamp;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.TimeZone;

public class TestDate {
//    public static void main(String[] args) throws ParseException {
//        SimpleDateFormat formatter = new SimpleDateFormat("dd-MM-yyyy");
//        Date date = formatter.parse("2022-05-12");
//        Date currentDate=new Date();
//        System.out.println(currentDate.getDate());
//        int i = currentDate.getDate() - date.getDate();
//        System.out.println(i);
//        String test="[{\"problemCode\":1008,\"actionDescription\":\"We are waiting for your prescriber to authorize additional refills.\",\"actionPriority\":2,\"problemDescription\":\"Need to Call Doctor for Refills\"},{\"problemCode\":1009,\"actionDescription\":\"We are waiting for your prescriber to authorize additional refills.\",\"actionPriority\":2,\"problemDescription\":\"Waiting for Doctor To Authorize Refills\"},{\"problemCode\":1047,\"actionDescription\":\"We have run into a snag with your prescription, please wait while we connect you to an associate\",\"actionPriority\":1,\"problemDescription\":\"Refills Not Authorized\"},{\"problemCode\":3012,\"actionDescription\":\"We have run into a snag with your prescription, please wait while we connect you to an associate\",\"actionPriority\":1,\"problemDescription\":\"Drug - Out of Stock\"},{\"problemCode\":4101,\"actionDescription\":\"We have run into a snag with your prescription, please wait while we connect you to an associate\",\"actionPriority\":1,\"problemDescription\":\"Bad BIN Number\"},{\"problemCode\":4104,\"actionDescription\":\"We have run into a snag with your prescription, please wait while we connect you to an associate\",\"actionPriority\":1,\"problemDescription\":\"Bad Processor Control Number\"},{\"problemCode\":4106,\"actionDescription\":\"We have run into a snag with your prescription, please wait while we connect you to an associate\",\"actionPriority\":1,\"problemDescription\":\"Bad Group Number\"},{\"problemCode\":4107,\"actionDescription\":\"We have run into a snag with your prescription, please wait while we connect you to an associate\",\"actionPriority\":1,\"problemDescription\":\"Bad Cardholder ID Number\"},{\"problemCode\":4109,\"actionDescription\":\"We have run into a snag with your prescription, please wait while we connect you to an associate\",\"actionPriority\":1,\"problemDescription\":\"Bad Birthdate\"},{\"problemCode\":4110,\"actionDescription\":\"We have run into a snag with your prescription, please wait while we connect you to an associate\",\"actionPriority\":1,\"problemDescription\":\"Bad Sex Code\"},{\"problemCode\":4113,\"actionDescription\":\"We have run into a snag with your prescription, please wait while we connect you to an associate\",\"actionPriority\":1,\"problemDescription\":\"Bad Other Coverage Code\"},{\"problemCode\":4141,\"actionDescription\":\"We have run into a snag with your prescription, please wait while we connect you to an associate\",\"actionPriority\":1,\"problemDescription\":\"Submit Bill to Other Processor or Primary Payer\"},{\"problemCode\":4151,\"actionDescription\":\"We have run into a snag with your prescription, please wait while we connect you to an associate\",\"actionPriority\":1,\"problemDescription\":\"Non-Matched Group Number\"},{\"problemCode\":4152,\"actionDescription\":\"We have run into a snag with your prescription, please wait while we connect you to an associate\",\"actionPriority\":1,\"problemDescription\":\"Non-Matched Cardholder ID\"},{\"problemCode\":4160,\"actionDescription\":\"We have run into a snag with your prescription, please wait while we connect you to an associate\",\"actionPriority\":1,\"problemDescription\":\"[RPh] - Drug Not Covered for Patient Age\"},{\"problemCode\":4162,\"actionDescription\":\"We have run into a snag with your prescription, please wait while we connect you to an associate\",\"actionPriority\":1,\"problemDescription\":\"Patient/Cardholder ID Name Mismatch\"},{\"problemCode\":4165,\"actionDescription\":\"We have run into a snag with your prescription, please wait while we connect you to an associate\",\"actionPriority\":1,\"problemDescription\":\"Patient Is Not Covered\"},{\"problemCode\":4168,\"actionDescription\":\"We have run into a snag with your prescription, please wait while we connect you to an associate\",\"actionPriority\":1,\"problemDescription\":\"Filled After Coverage Expired\"},{\"problemCode\":4170,\"actionDescription\":\"We have run into a snag with your prescription, please wait while we connect you to an associate\",\"actionPriority\":1,\"problemDescription\":\"NDC Not Covered\"},{\"problemCode\":4323,\"actionDescription\":\"We have run into a snag with your prescription, please wait while we connect you to an associate\",\"actionPriority\":1,\"problemDescription\":\"Missing/Invalid Coordination Of Benefits/ Other Payments Count\"},{\"problemCode\":4338,\"actionDescription\":\"We have run into a snag with your prescription, please wait while we connect you to an associate\",\"actionPriority\":1,\"problemDescription\":\"Patient Enrolled Under Managed Care\"},{\"problemCode\":6720,\"actionDescription\":\"We have run into a snag with your prescription, please wait while we connect you to an associate\",\"actionPriority\":1,\"problemDescription\":\"Non-Matched DOB\"},{\"problemCode\":6781,\"actionDescription\":\"We have run into a snag with your prescription, please wait while we connect you to an associate\",\"actionPriority\":1,\"problemDescription\":\"Not Covered Under Part D Law\"},{\"problemCode\":8059,\"actionDescription\":\"We have run into a snag with your prescription, please wait while we connect you to an associate\",\"actionPriority\":1,\"problemDescription\":\"Transfer Rx Denied\"},{\"problemCode\":8067,\"actionDescription\":\"We have run into a snag with your prescription, please wait while we connect you to an associate\",\"actionPriority\":1,\"problemDescription\":\"Refills Not Authorized\"},{\"problemCode\":10151,\"actionDescription\":\"We have run into a snag with your prescription, please wait while we connect you to an associate\",\"actionPriority\":1,\"problemDescription\":\"Billing Error\"},{\"problemCode\":0,\"actionDescription\":\"We are processing your prescription and you current ready time is <New Estimated Due Time>; would you like use to connect you to an associate?\",\"actionPriority\":5,\"problemDescription\":\"0\"},{\"problemCode\":4175,\"actionDescription\":\"Your insurance requires additional information to bill this prescription.  We have notified your prescriber. Would you like to transfer to an associate for additional information?\",\"actionPriority\":3,\"problemDescription\":\"Prior Authorization Required\"},{\"problemCode\":8055,\"actionDescription\":\"We have reached out to transfer your prescription.  Would you like us to connect you to an associate?\",\"actionPriority\":4,\"problemDescription\":\"Waiting for Transfer Approval\"},{\"problemCode\":8058,\"actionDescription\":\"We have reached out to transfer your prescription.  Would you like us to connect you to an associate?\",\"actionPriority\":4,\"problemDescription\":\"Transfer Rx Request\"},{\"problemCode\":8066,\"actionDescription\":\"We have reached out to transfer your prescription.  Would you like us to connect you to an associate?\",\"actionPriority\":4,\"problemDescription\":\"Need to Contact Customer\"}]";
//        System.out.println(test);
//    }

    public static String convertTimeWithTimeZone(long time){
        Calendar cal = Calendar.getInstance();
        cal.setTimeZone(TimeZone.getTimeZone("UTC"));
        cal.setTimeInMillis(time);
        return (cal.get(Calendar.YEAR) + "-" + (cal.get(Calendar.MONTH) + 1) + "-"
                + cal.get(Calendar.DAY_OF_MONTH) + " " + cal.get(Calendar.HOUR_OF_DAY) + ":"
                + cal.get(Calendar.MINUTE)+":"+cal.get(Calendar.SECOND)+"."+cal.get(Calendar.MILLISECOND));

    }

    public static void main(String[] args) {
        System.out.println(convertTimeWithTimeZone(1652353249000L));
        System.out.println(System.currentTimeMillis());
        Timestamp ts
                = new Timestamp(1652353249000L);
        Date date = new Date(ts.getTime());
        System.out.println(String.valueOf(ts));
        System.out.println(String.valueOf(date));
    }
}
